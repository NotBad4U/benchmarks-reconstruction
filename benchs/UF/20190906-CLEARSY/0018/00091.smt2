(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |
Generated by: David Deharbe, CLEARSY
Generated on: 2019-09-09
Generator: bxml;pog;pog2smt (Atelier B)
Application: B-method
Target solver: CVC4, Z3
|)
(set-info :license "https://creativecommons.org/licenses/by-nc/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
; Prelude
(declare-sort U 0)
(declare-fun |*i| (U U) U)
(declare-fun |+i| (U U) U)
(declare-fun |-i| (U U) U)
(declare-fun idiv (U U) U)
(declare-fun |*r| (U U) U)
(declare-fun |+r| (U U) U)
(declare-fun |-r| (U U) U)
(declare-fun rdiv (U U) U)
(declare-fun modulo (U U) U)
(declare-fun |<i| (U U) Bool)
(declare-fun |<=i| (U U) Bool)
(declare-fun |>i| (U U) Bool)
(declare-fun |>=i| (U U) Bool)
(declare-fun |<r| (U U) Bool)
(declare-fun |<=r| (U U) Bool)
(declare-fun |>r| (U U) Bool)
(declare-fun |>=r| (U U) Bool)
(declare-fun iuminus (U) U)
(declare-fun ruminus (U) U)
(declare-fun TRUE () U)
(declare-fun FALSE () U)
(assert (not (= TRUE FALSE)))
(declare-fun empty () U)
(declare-fun bool (Bool) U)
(declare-fun BOOL () U)
(declare-fun INT () U)
(declare-fun INTEGER () U)
(declare-fun NAT () U)
(declare-fun NAT1 () U)
(declare-fun NATURAL () U)
(declare-fun NATURAL1 () U)
(declare-fun FLOAT () U)
(declare-fun MaxInt () U)
(declare-fun MinInt () U)
(declare-fun |STRING| () U)
(declare-fun REAL () U)
(declare-fun set_prod (U U) U)
(declare-fun set_diff (U U) U)
(declare-fun mapplet (U U) U)
(declare-fun |**i| (U U) U)
(declare-fun |**r| (U U) U)
(declare-fun |+->| (U U) U)
(declare-fun |+->>| (U U) U)
(declare-fun |-->| (U U) U)
(declare-fun |-->>| (U U) U)
(declare-fun |<->| (U U) U)
(declare-fun |>+>| (U U) U)
(declare-fun |>->| (U U) U)
(declare-fun |>+>>| (U U) U)
(declare-fun |>->>| (U U) U)
(declare-fun |->| (U U) U)
(declare-fun interval (U U) U)
(declare-fun composition (U U) U)
(declare-fun binary_inter (U U) U)
(declare-fun restriction_head (U U) U)
(declare-fun semicolon (U U) U)
(declare-fun |<+| (U U) U)
(declare-fun |<-| (U U) U)
(declare-fun domain_subtraction (U U) U)
(declare-fun domain_restriction (U U) U)
(declare-fun |><| (U U) U)
(declare-fun parallel_product (U U) U)
(declare-fun binary_union (U U) U)
(declare-fun restriction_tail (U U) U)
(declare-fun concatenate (U U) U)
(declare-fun range_restriction (U U) U)
(declare-fun range_subtraction (U U) U)
(declare-fun image (U U) U)
(declare-fun apply (U U) U)
(declare-fun prj1 (U U) U)
(declare-fun prj2 (U U) U)
(declare-fun iterate (U U) U)
(declare-fun |const| (U U) U)
(declare-fun rank (U U) U)
(declare-fun father (U U) U)
(declare-fun subtree (U U) U)
(declare-fun arity (U U) U)
(declare-fun |+f| (U U) U)
(declare-fun |-f| (U U) U)
(declare-fun |*f| (U U) U)
(declare-fun |fdiv| (U U) U)
(declare-fun tbin (U U U) U)
(declare-fun son (U U U) U)
(declare-fun mem (U U) Bool)
(declare-fun subset (U U) Bool)
(declare-fun strict_subset (U U) Bool)
(declare-fun |<=f| (U U) Bool)
(declare-fun |<f| (U U) Bool)
(declare-fun |>=f| (U U) Bool)
(declare-fun |>f| (U U) Bool)
(declare-fun imax (U) U)
(declare-fun imin (U) U)
(declare-fun rmax (U) U)
(declare-fun rmin (U) U)
(declare-fun card (U) U)
(declare-fun dom (U) U)
(declare-fun ran (U) U)
(declare-fun POW (U) U)
(declare-fun POW1 (U) U)
(declare-fun FIN (U) U)
(declare-fun FIN1 (U) U)
(declare-fun union (U) U)
(declare-fun inter (U) U)
(declare-fun seq (U) U)
(declare-fun seq1 (U) U)
(declare-fun iseq (U) U)
(declare-fun iseq1 (U) U)
(declare-fun inverse (U) U)
(declare-fun size (U) U)
(declare-fun perm (U) U)
(declare-fun first (U) U)
(declare-fun last (U) U)
(declare-fun id (U) U)
(declare-fun closure (U) U)
(declare-fun closure1 (U) U)
(declare-fun tail (U) U)
(declare-fun front (U) U)
(declare-fun reverse (U) U)
(declare-fun rev (U) U)
(declare-fun conc (U) U)
(declare-fun succ (U) U)
(declare-fun pred (U) U)
(declare-fun rel (U) U)
(declare-fun fnc (U) U)
(declare-fun real (U) U)
(declare-fun floor (U) U)
(declare-fun ceiling (U) U)
(declare-fun tree (U) U)
(declare-fun btree (U) U)
(declare-fun top (U) U)
(declare-fun sons (U) U)
(declare-fun prefix (U) U)
(declare-fun postfix (U) U)
(declare-fun sizet (U) U)
(declare-fun mirror (U) U)
(declare-fun left (U) U)
(declare-fun right (U) U)
(declare-fun infix (U) U)
(declare-fun ubin (U) U)
(declare-fun SEQ (U) U)
(declare-fun SET (U) U)
; Opaque formulas
(declare-fun e215 () U)
(declare-fun e0 () U)
(declare-fun e167 () U)
(declare-fun e463 () U)
(declare-fun e277 () U)
(declare-fun e279 () U)
(declare-fun g_s0_1 () U)
(declare-fun g_s1_2 () U)
(declare-fun g_s10_11 () U)
(declare-fun g_s100_101 () U)
(declare-fun g_s101_102 () U)
(declare-fun g_s102_103 () U)
(declare-fun g_s103_104 () U)
(declare-fun g_s104_105 () U)
(declare-fun g_s105_106 () U)
(declare-fun g_s106_107 () U)
(declare-fun g_s107_108 () U)
(declare-fun g_s108_109 () U)
(declare-fun g_s109_110 () U)
(declare-fun g_s11_12 () U)
(declare-fun g_s110_111 () U)
(declare-fun g_s111_112 () U)
(declare-fun g_s112_113 () U)
(declare-fun g_s113_114 () U)
(declare-fun g_s114_115 () U)
(declare-fun g_s115_116 () U)
(declare-fun g_s116_117 () U)
(declare-fun g_s117_118 () U)
(declare-fun g_s118_119 () U)
(declare-fun g_s119_120 () U)
(declare-fun g_s12_13 () U)
(declare-fun g_s120_121 () U)
(declare-fun g_s121_122 () U)
(declare-fun g_s122_123 () U)
(declare-fun g_s123_124 () U)
(declare-fun g_s124_125 () U)
(declare-fun g_s125_126 () U)
(declare-fun g_s126_127 () U)
(declare-fun g_s127_128 () U)
(declare-fun g_s128_129 () U)
(declare-fun g_s129_130 () U)
(declare-fun g_s13_14 () U)
(declare-fun g_s130_131 () U)
(declare-fun g_s131_132 () U)
(declare-fun g_s132_133 () U)
(declare-fun g_s133_134 () U)
(declare-fun g_s134_135 () U)
(declare-fun g_s135_136 () U)
(declare-fun g_s136_137 () U)
(declare-fun g_s137_138 () U)
(declare-fun g_s138_139 () U)
(declare-fun g_s139_140 () U)
(declare-fun g_s14_15 () U)
(declare-fun g_s140_141 () U)
(declare-fun g_s142_142 () U)
(declare-fun g_s143_143 () U)
(declare-fun g_s144_144 () U)
(declare-fun g_s145_145 () U)
(declare-fun g_s146_146 () U)
(declare-fun g_s147_147 () U)
(declare-fun g_s148_148 () U)
(declare-fun g_s149_149 () U)
(declare-fun g_s15_16 () U)
(declare-fun g_s150_150 () U)
(declare-fun g_s151_151 () U)
(declare-fun g_s152_152 () U)
(declare-fun g_s153_153 () U)
(declare-fun g_s154_154 () U)
(declare-fun g_s155_155 () U)
(declare-fun g_s156_156 () U)
(declare-fun g_s157_157 () U)
(declare-fun g_s158_158 () U)
(declare-fun g_s159_159 () U)
(declare-fun g_s16_17 () U)
(declare-fun g_s160_160 () U)
(declare-fun g_s161_161 () U)
(declare-fun g_s162_162 () U)
(declare-fun g_s163_163 () U)
(declare-fun g_s164_164 () U)
(declare-fun g_s165_165 () U)
(declare-fun g_s166_166 () U)
(declare-fun g_s167_168 () U)
(declare-fun g_s168_169 () U)
(declare-fun g_s169_170 () U)
(declare-fun g_s17_18 () U)
(declare-fun g_s170_171 () U)
(declare-fun g_s171_172 () U)
(declare-fun g_s172_173 () U)
(declare-fun g_s173_174 () U)
(declare-fun g_s174_175 () U)
(declare-fun g_s175_176 () U)
(declare-fun g_s176_177 () U)
(declare-fun g_s177_178 () U)
(declare-fun g_s178_179 () U)
(declare-fun g_s179_180 () U)
(declare-fun g_s18_19 () U)
(declare-fun g_s180_181 () U)
(declare-fun g_s181_182 () U)
(declare-fun g_s182_183 () U)
(declare-fun g_s183_184 () U)
(declare-fun g_s184_185 () U)
(declare-fun g_s185_186 () U)
(declare-fun g_s186_187 () U)
(declare-fun g_s187_188 () U)
(declare-fun g_s188_189 () U)
(declare-fun g_s189_190 () U)
(declare-fun g_s19_20 () U)
(declare-fun g_s190_191 () U)
(declare-fun g_s191_192 () U)
(declare-fun g_s192_193 () U)
(declare-fun g_s193_194 () U)
(declare-fun g_s194_195 () U)
(declare-fun g_s195_196 () U)
(declare-fun g_s196_197 () U)
(declare-fun g_s197_198 () U)
(declare-fun g_s198_199 () U)
(declare-fun g_s199_200 () U)
(declare-fun g_s2_3 () U)
(declare-fun g_s20_21 () U)
(declare-fun g_s200_201 () U)
(declare-fun g_s201_202 () U)
(declare-fun g_s202_203 () U)
(declare-fun g_s203_204 () U)
(declare-fun g_s204_205 () U)
(declare-fun g_s205_206 () U)
(declare-fun g_s206_207 () U)
(declare-fun g_s207_208 () U)
(declare-fun g_s208_209 () U)
(declare-fun g_s209_210 () U)
(declare-fun g_s21_22 () U)
(declare-fun g_s210_211 () U)
(declare-fun g_s211_212 () U)
(declare-fun g_s212_213 () U)
(declare-fun g_s213_214 () U)
(declare-fun g_s214_216 () U)
(declare-fun g_s215_217 () U)
(declare-fun g_s216_218 () U)
(declare-fun g_s217_219 () U)
(declare-fun g_s218_220 () U)
(declare-fun g_s219_221 () U)
(declare-fun g_s22_23 () U)
(declare-fun g_s220_222 () U)
(declare-fun g_s221_223 () U)
(declare-fun g_s222_224 () U)
(declare-fun g_s223_225 () U)
(declare-fun g_s224_226 () U)
(declare-fun g_s225_227 () U)
(declare-fun g_s226_228 () U)
(declare-fun g_s227_229 () U)
(declare-fun g_s228_230 () U)
(declare-fun g_s229_231 () U)
(declare-fun g_s23_24 () U)
(declare-fun g_s230_232 () U)
(declare-fun g_s231_233 () U)
(declare-fun g_s232_234 () U)
(declare-fun g_s233_235 () U)
(declare-fun g_s234_236 () U)
(declare-fun g_s235_237 () U)
(declare-fun g_s236_238 () U)
(declare-fun g_s237_239 () U)
(declare-fun g_s238_240 () U)
(declare-fun g_s239_241 () U)
(declare-fun g_s24_25 () U)
(declare-fun g_s240_242 () U)
(declare-fun g_s241_243 () U)
(declare-fun g_s242_244 () U)
(declare-fun g_s243_245 () U)
(declare-fun g_s244_246 () U)
(declare-fun g_s245_247 () U)
(declare-fun g_s246_248 () U)
(declare-fun g_s247_249 () U)
(declare-fun g_s248_250 () U)
(declare-fun g_s249_251 () U)
(declare-fun g_s25_26 () U)
(declare-fun g_s250_252 () U)
(declare-fun g_s251_253 () U)
(declare-fun g_s252_254 () U)
(declare-fun g_s253_255 () U)
(declare-fun g_s254_256 () U)
(declare-fun g_s255_257 () U)
(declare-fun g_s256_258 () U)
(declare-fun g_s257_259 () U)
(declare-fun g_s258_260 () U)
(declare-fun g_s259_261 () U)
(declare-fun g_s26_27 () U)
(declare-fun g_s260_262 () U)
(declare-fun g_s261_263 () U)
(declare-fun g_s262_264 () U)
(declare-fun g_s263_265 () U)
(declare-fun g_s264_266 () U)
(declare-fun g_s265_267 () U)
(declare-fun g_s266_268 () U)
(declare-fun g_s267_269 () U)
(declare-fun g_s268_270 () U)
(declare-fun g_s269_271 () U)
(declare-fun g_s27_28 () U)
(declare-fun g_s270_272 () U)
(declare-fun g_s271_273 () U)
(declare-fun g_s272_274 () U)
(declare-fun g_s273_275 () U)
(declare-fun g_s274_276 () U)
(declare-fun g_s275_278 () U)
(declare-fun g_s276_280 () U)
(declare-fun g_s277_281 () U)
(declare-fun g_s278_282 () U)
(declare-fun g_s279_283 () U)
(declare-fun g_s28_29 () U)
(declare-fun g_s280_284 () U)
(declare-fun g_s281_285 () U)
(declare-fun g_s282_286 () U)
(declare-fun g_s283_287 () U)
(declare-fun g_s284_288 () U)
(declare-fun g_s285_289 () U)
(declare-fun g_s286_290 () U)
(declare-fun g_s287_291 () U)
(declare-fun g_s288_292 () U)
(declare-fun g_s289_293 () U)
(declare-fun g_s29_30 () U)
(declare-fun g_s290_294 () U)
(declare-fun g_s291_295 () U)
(declare-fun g_s292_296 () U)
(declare-fun g_s293_297 () U)
(declare-fun g_s294_298 () U)
(declare-fun g_s295_299 () U)
(declare-fun g_s296_300 () U)
(declare-fun g_s297_301 () U)
(declare-fun g_s298_302 () U)
(declare-fun g_s299_303 () U)
(declare-fun g_s3_4 () U)
(declare-fun g_s30_31 () U)
(declare-fun g_s300_304 () U)
(declare-fun g_s301_305 () U)
(declare-fun g_s302_306 () U)
(declare-fun g_s303_307 () U)
(declare-fun g_s304_308 () U)
(declare-fun g_s305_309 () U)
(declare-fun g_s306_310 () U)
(declare-fun g_s307_311 () U)
(declare-fun g_s308_312 () U)
(declare-fun g_s309_313 () U)
(declare-fun g_s31_32 () U)
(declare-fun g_s310_314 () U)
(declare-fun g_s311_315 () U)
(declare-fun g_s312_316 () U)
(declare-fun g_s313_317 () U)
(declare-fun g_s314_318 () U)
(declare-fun g_s315_319 () U)
(declare-fun g_s316_320 () U)
(declare-fun g_s317_321 () U)
(declare-fun g_s318_322 () U)
(declare-fun g_s319_323 () U)
(declare-fun g_s32_33 () U)
(declare-fun g_s320_324 () U)
(declare-fun g_s321_325 () U)
(declare-fun g_s322_326 () U)
(declare-fun g_s323_327 () U)
(declare-fun g_s324_328 () U)
(declare-fun g_s325_329 () U)
(declare-fun g_s326_330 () U)
(declare-fun g_s327_331 () U)
(declare-fun g_s328_332 () U)
(declare-fun g_s329_333 () U)
(declare-fun g_s33_34 () U)
(declare-fun g_s330_334 () U)
(declare-fun g_s331_335 () U)
(declare-fun g_s332_336 () U)
(declare-fun g_s333_337 () U)
(declare-fun g_s334_338 () U)
(declare-fun g_s335_339 () U)
(declare-fun g_s336_340 () U)
(declare-fun g_s337_341 () U)
(declare-fun g_s338_342 () U)
(declare-fun g_s339_343 () U)
(declare-fun g_s34_35 () U)
(declare-fun g_s340_344 () U)
(declare-fun g_s341_345 () U)
(declare-fun g_s342_346 () U)
(declare-fun g_s343_347 () U)
(declare-fun g_s344_348 () U)
(declare-fun g_s345_349 () U)
(declare-fun g_s346_350 () U)
(declare-fun g_s347_351 () U)
(declare-fun g_s348_352 () U)
(declare-fun g_s349_353 () U)
(declare-fun g_s35_36 () U)
(declare-fun g_s350_354 () U)
(declare-fun g_s351_355 () U)
(declare-fun g_s352_356 () U)
(declare-fun g_s353_357 () U)
(declare-fun g_s354_358 () U)
(declare-fun g_s355_359 () U)
(declare-fun g_s356_360 () U)
(declare-fun g_s357_361 () U)
(declare-fun g_s358_362 () U)
(declare-fun g_s359_363 () U)
(declare-fun g_s36_37 () U)
(declare-fun g_s360_364 () U)
(declare-fun g_s361_365 () U)
(declare-fun g_s362_366 () U)
(declare-fun g_s363_367 () U)
(declare-fun g_s364_368 () U)
(declare-fun g_s365_369 () U)
(declare-fun g_s366_370 () U)
(declare-fun g_s367_371 () U)
(declare-fun g_s368_372 () U)
(declare-fun g_s369_373 () U)
(declare-fun g_s37_38 () U)
(declare-fun g_s370_374 () U)
(declare-fun g_s371_375 () U)
(declare-fun g_s372_376 () U)
(declare-fun g_s373_377 () U)
(declare-fun g_s374_378 () U)
(declare-fun g_s375_379 () U)
(declare-fun g_s376_380 () U)
(declare-fun g_s377_381 () U)
(declare-fun g_s378_382 () U)
(declare-fun g_s379_383 () U)
(declare-fun g_s38_39 () U)
(declare-fun g_s380_384 () U)
(declare-fun g_s381_385 () U)
(declare-fun g_s382_386 () U)
(declare-fun g_s383_387 () U)
(declare-fun g_s384_388 () U)
(declare-fun g_s385_389 () U)
(declare-fun g_s386_390 () U)
(declare-fun g_s387_391 () U)
(declare-fun g_s388_392 () U)
(declare-fun g_s389_393 () U)
(declare-fun g_s39_40 () U)
(declare-fun g_s390_394 () U)
(declare-fun g_s391_395 () U)
(declare-fun g_s392_396 () U)
(declare-fun g_s393_397 () U)
(declare-fun g_s394_398 () U)
(declare-fun g_s395_399 () U)
(declare-fun g_s396_400 () U)
(declare-fun g_s397_401 () U)
(declare-fun g_s398_402 () U)
(declare-fun g_s399_403 () U)
(declare-fun g_s4_5 () U)
(declare-fun g_s40_41 () U)
(declare-fun g_s400_404 () U)
(declare-fun g_s401_405 () U)
(declare-fun g_s402_406 () U)
(declare-fun g_s403_407 () U)
(declare-fun g_s404_408 () U)
(declare-fun g_s405_409 () U)
(declare-fun g_s406_410 () U)
(declare-fun g_s407_411 () U)
(declare-fun g_s408_412 () U)
(declare-fun g_s409_413 () U)
(declare-fun g_s41_42 () U)
(declare-fun g_s410_414 () U)
(declare-fun g_s411_415 () U)
(declare-fun g_s412_416 () U)
(declare-fun g_s413_417 () U)
(declare-fun g_s414_418 () U)
(declare-fun g_s415_419 () U)
(declare-fun g_s416_420 () U)
(declare-fun g_s417_421 () U)
(declare-fun g_s418_422 () U)
(declare-fun g_s419_423 () U)
(declare-fun g_s42_43 () U)
(declare-fun g_s420_424 () U)
(declare-fun g_s421_425 () U)
(declare-fun g_s422_426 () U)
(declare-fun g_s423_427 () U)
(declare-fun g_s424_428 () U)
(declare-fun g_s425_429 () U)
(declare-fun g_s426_430 () U)
(declare-fun g_s427_431 () U)
(declare-fun g_s428_432 () U)
(declare-fun g_s429_433 () U)
(declare-fun g_s43_44 () U)
(declare-fun g_s430_434 () U)
(declare-fun g_s431_435 () U)
(declare-fun g_s432_436 () U)
(declare-fun g_s433_437 () U)
(declare-fun g_s434_438 () U)
(declare-fun g_s435_439 () U)
(declare-fun g_s436_440 () U)
(declare-fun g_s437_441 () U)
(declare-fun g_s438_442 () U)
(declare-fun g_s439_443 () U)
(declare-fun g_s44_45 () U)
(declare-fun g_s440_444 () U)
(declare-fun g_s441_445 () U)
(declare-fun g_s442_446 () U)
(declare-fun g_s443_447 () U)
(declare-fun g_s444_448 () U)
(declare-fun g_s445_449 () U)
(declare-fun g_s446_450 () U)
(declare-fun g_s447_451 () U)
(declare-fun g_s448_452 () U)
(declare-fun g_s449_453 () U)
(declare-fun g_s45_46 () U)
(declare-fun g_s450_454 () U)
(declare-fun g_s454_456 () U)
(declare-fun g_s455_457 () U)
(declare-fun g_s456_458 () U)
(declare-fun g_s457_459 () U)
(declare-fun g_s458_460 () U)
(declare-fun g_s459_461 () U)
(declare-fun g_s46_47 () U)
(declare-fun g_s460_462 () U)
(declare-fun g_s461_464 () U)
(declare-fun g_s462_465 () U)
(declare-fun g_s463_466 () U)
(declare-fun g_s464_467 () U)
(declare-fun g_s465_468 () U)
(declare-fun g_s466_469 () U)
(declare-fun g_s467_470 () U)
(declare-fun g_s468_472 () U)
(declare-fun g_s469_474 () U)
(declare-fun g_s47_48 () U)
(declare-fun g_s470_476 () U)
(declare-fun g_s471_477 () U)
(declare-fun g_s472_478 () U)
(declare-fun g_s473_479 () U)
(declare-fun g_s474_480 () U)
(declare-fun g_s475_481 () U)
(declare-fun g_s476_482 () U)
(declare-fun g_s477_483 () U)
(declare-fun g_s478_484 () U)
(declare-fun g_s479_485 () U)
(declare-fun g_s48_49 () U)
(declare-fun g_s480_486 () U)
(declare-fun g_s481_487 () U)
(declare-fun g_s482_488 () U)
(declare-fun g_s483_489 () U)
(declare-fun g_s484_490 () U)
(declare-fun g_s485_491 () U)
(declare-fun g_s486_492 () U)
(declare-fun g_s487_493 () U)
(declare-fun g_s489_494 () U)
(declare-fun g_s489$1_495 () U)
(declare-fun g_s49_50 () U)
(declare-fun g_s5_6 () U)
(declare-fun g_s50_51 () U)
(declare-fun g_s51_52 () U)
(declare-fun g_s52_53 () U)
(declare-fun g_s53_54 () U)
(declare-fun g_s54_55 () U)
(declare-fun g_s55_56 () U)
(declare-fun g_s56_57 () U)
(declare-fun g_s57_58 () U)
(declare-fun g_s58_59 () U)
(declare-fun g_s59_60 () U)
(declare-fun g_s6_7 () U)
(declare-fun g_s60_61 () U)
(declare-fun g_s61_62 () U)
(declare-fun g_s62_63 () U)
(declare-fun g_s63_64 () U)
(declare-fun g_s64_65 () U)
(declare-fun g_s65_66 () U)
(declare-fun g_s66_67 () U)
(declare-fun g_s67_68 () U)
(declare-fun g_s68_69 () U)
(declare-fun g_s69_70 () U)
(declare-fun g_s7_8 () U)
(declare-fun g_s70_71 () U)
(declare-fun g_s71_72 () U)
(declare-fun g_s72_73 () U)
(declare-fun g_s73_74 () U)
(declare-fun g_s74_75 () U)
(declare-fun g_s75_76 () U)
(declare-fun g_s76_77 () U)
(declare-fun g_s77_78 () U)
(declare-fun g_s78_79 () U)
(declare-fun g_s79_80 () U)
(declare-fun g_s8_9 () U)
(declare-fun g_s80_81 () U)
(declare-fun g_s81_82 () U)
(declare-fun g_s82_83 () U)
(declare-fun g_s83_84 () U)
(declare-fun g_s84_85 () U)
(declare-fun g_s85_86 () U)
(declare-fun g_s86_87 () U)
(declare-fun g_s87_88 () U)
(declare-fun g_s88_89 () U)
(declare-fun g_s89_90 () U)
(declare-fun g_s9_10 () U)
(declare-fun g_s90_91 () U)
(declare-fun g_s91_92 () U)
(declare-fun g_s92_93 () U)
(declare-fun g_s93_94 () U)
(declare-fun g_s94_95 () U)
(declare-fun g_s95_96 () U)
(declare-fun g_s96_97 () U)
(declare-fun g_s97_98 () U)
(declare-fun g_s98_99 () U)
(declare-fun g_s99_100 () U)
(declare-fun e455 () U)
(declare-fun e471 () U)
(declare-fun e473 () U)
(declare-fun e475 () U)
; Defines
(define-fun |def_B definitions| () Bool (and (= NAT (interval e0 MaxInt)) (= INT (interval MinInt MaxInt))))
(define-fun |def_ctx| () Bool (and (= g_s0_1 (SET (mapplet g_s2_3 g_s1_2))) (not (= g_s3_4 empty)) (not (= g_s4_5 empty)) (not (= g_s5_6 empty)) (not (= g_s6_7 empty)) (not (= g_s7_8 empty)) (not (= g_s8_9 empty)) (not (= g_s9_10 empty)) (not (= g_s10_11 empty)) (not (= g_s11_12 empty)) (not (= g_s12_13 empty)) (not (= g_s13_14 empty)) (not (= g_s14_15 empty)) (= g_s15_16 (SET (mapplet g_s17_18 g_s16_17))) (= g_s18_19 (SET (mapplet g_s34_35 (mapplet g_s33_34 (mapplet g_s32_33 (mapplet g_s31_32 (mapplet g_s30_31 (mapplet g_s29_30 (mapplet g_s28_29 (mapplet g_s27_28 (mapplet g_s26_27 (mapplet g_s25_26 (mapplet g_s24_25 (mapplet g_s23_24 (mapplet g_s22_23 (mapplet g_s21_22 (mapplet g_s20_21 g_s19_20))))))))))))))))) (not (= g_s35_36 empty)) (not (= g_s36_37 empty)) (not (= g_s37_38 empty)) (not (= g_s38_39 empty)) (not (= g_s39_40 empty)) (not (= g_s40_41 empty)) (not (= g_s41_42 empty)) (not (= g_s42_43 empty)) (not (= g_s43_44 empty)) (= g_s44_45 (SET (mapplet g_s108_109 (mapplet g_s107_108 (mapplet g_s106_107 (mapplet g_s105_106 (mapplet g_s104_105 (mapplet g_s103_104 (mapplet g_s102_103 (mapplet g_s101_102 (mapplet g_s100_101 (mapplet g_s99_100 (mapplet g_s98_99 (mapplet g_s97_98 (mapplet g_s96_97 (mapplet g_s95_96 (mapplet g_s94_95 (mapplet g_s93_94 (mapplet g_s92_93 (mapplet g_s91_92 (mapplet g_s90_91 (mapplet g_s89_90 (mapplet g_s88_89 (mapplet g_s87_88 (mapplet g_s86_87 (mapplet g_s85_86 (mapplet g_s84_85 (mapplet g_s83_84 (mapplet g_s82_83 (mapplet g_s81_82 (mapplet g_s80_81 (mapplet g_s79_80 (mapplet g_s78_79 (mapplet g_s77_78 (mapplet g_s76_77 (mapplet g_s75_76 (mapplet g_s74_75 (mapplet g_s73_74 (mapplet g_s72_73 (mapplet g_s71_72 (mapplet g_s70_71 (mapplet g_s69_70 (mapplet g_s68_69 (mapplet g_s67_68 (mapplet g_s66_67 (mapplet g_s65_66 (mapplet g_s64_65 (mapplet g_s63_64 (mapplet g_s62_63 (mapplet g_s61_62 (mapplet g_s60_61 (mapplet g_s59_60 (mapplet g_s58_59 (mapplet g_s57_58 (mapplet g_s56_57 (mapplet g_s55_56 (mapplet g_s54_55 (mapplet g_s53_54 (mapplet g_s52_53 (mapplet g_s51_52 (mapplet g_s50_51 (mapplet g_s49_50 (mapplet g_s48_49 (mapplet g_s47_48 (mapplet g_s46_47 g_s45_46))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (= g_s109_110 (SET (mapplet g_s123_124 (mapplet g_s122_123 (mapplet g_s121_122 (mapplet g_s120_121 (mapplet g_s119_120 (mapplet g_s118_119 (mapplet g_s117_118 (mapplet g_s116_117 (mapplet g_s115_116 (mapplet g_s114_115 (mapplet g_s113_114 (mapplet g_s112_113 (mapplet g_s111_112 g_s110_111))))))))))))))) (= g_s124_125 (SET (mapplet g_s128_129 (mapplet g_s127_128 (mapplet g_s126_127 g_s125_126))))) (= g_s129_130 MaxInt) (= g_s130_131 MinInt) (mem g_s131_132 g_s6_7) (mem g_s132_133 g_s6_7) (mem g_s133_134 g_s6_7) (not (= g_s132_133 g_s131_132)) (not (= g_s133_134 g_s131_132)) (not (= g_s133_134 g_s132_133)) (mem g_s134_135 g_s6_7) (mem g_s135_136 g_s6_7) (not (= g_s134_135 g_s131_132)) (not (= g_s135_136 g_s131_132)) (not (= g_s135_136 g_s134_135)) (subset g_s136_137 g_s7_8) (mem g_s137_138 g_s7_8) (= (set_diff g_s7_8 (SET g_s137_138)) g_s136_137) (not (mem g_s137_138 g_s136_137)) (mem g_s138_139 g_s8_9) (mem g_s139_140 (|-->| g_s7_8 g_s8_9)) (mem g_s140_141 (|-->| g_s8_9 g_s7_8)) (= (apply g_s139_140 g_s137_138) g_s138_139) (= g_s140_141 (inverse g_s139_140)) (forall ((l_s141 U)) (=> (and (mem l_s141 g_s136_137) (not (= l_s141 g_s137_138))) (not (= (apply g_s139_140 l_s141) g_s138_139)))) (subset g_s142_142 g_s3_4) (mem g_s143_143 g_s3_4) (not (mem g_s143_143 g_s142_142)) (subset g_s144_144 g_s4_5) (mem g_s145_145 g_s4_5) (not (mem g_s145_145 g_s144_144)) (= g_s146_146 (SET (mapplet (mapplet g_s2_3 g_s1_2) (mapplet g_s1_2 g_s2_3)))) (= g_s147_147 (SET (mapplet (mapplet g_s135_136 g_s2_3) (mapplet g_s134_135 g_s1_2)))) (mem g_s148_148 (|-->| g_s6_7 NAT)) (mem g_s149_149 NAT1) (|<i| g_s149_149 MaxInt) (subset g_s150_150 g_s9_10) (mem g_s151_151 g_s9_10) (mem g_s151_151 g_s150_150) (mem g_s152_152 g_s9_10) (not (mem g_s152_152 g_s150_150)) (subset g_s153_153 g_s10_11) (mem g_s154_154 g_s10_11) (subset g_s155_155 g_s11_12) (mem g_s156_156 g_s11_12) (mem g_s156_156 g_s155_155) (mem g_s157_157 g_s11_12) (not (mem g_s157_157 g_s155_155)) (subset g_s158_158 g_s12_13) (mem g_s159_159 g_s12_13) (subset g_s160_160 g_s13_14) (mem g_s161_161 g_s13_14) (mem g_s161_161 g_s160_160) (mem g_s162_162 g_s13_14) (not (mem g_s162_162 g_s160_160)) (subset g_s163_163 g_s14_15) (mem g_s164_164 g_s14_15) (not (mem g_s164_164 g_s163_163)) (mem g_s165_165 (perm g_s150_150)) (|<i| (size g_s165_165) MaxInt) (mem g_s166_166 (perm g_s160_160)) (|<i| (size g_s166_166) MaxInt) (|<=i| e167 (size g_s166_166)) (mem g_s167_168 (perm g_s155_155)) (|<i| (size g_s167_168) MaxInt) (mem g_s168_169 (perm g_s158_158)) (|<i| (size g_s168_169) MaxInt) (mem g_s169_170 (perm g_s163_163)) (|<i| (size g_s169_170) MaxInt) (mem g_s170_171 (perm g_s153_153)) (|<i| (size g_s170_171) MaxInt) (= g_s171_172 (|-->| g_s9_10 INT)) (= g_s172_173 (|-->| g_s9_10 g_s6_7)) (= g_s173_174 (|-->| g_s9_10 g_s9_10)) (= g_s174_175 (|-->| g_s9_10 g_s0_1)) (= g_s175_176 (|-->| g_s9_10 g_s13_14)) (= g_s176_177 (|-->| g_s9_10 g_s11_12)) (mem g_s177_178 g_s171_172) (= g_s177_178 (set_prod g_s9_10 (SET e0))) (mem g_s178_179 g_s171_172) (= g_s178_179 (set_prod g_s9_10 (SET e167))) (mem g_s179_180 g_s172_173) (mem g_s180_181 g_s173_174) (mem g_s181_182 g_s174_175) (mem g_s182_183 g_s175_176) (mem g_s183_184 g_s176_177) (= g_s183_184 (set_prod g_s9_10 (SET g_s157_157))) (= g_s184_185 (|-->| g_s10_11 INT)) (= g_s185_186 (|-->| g_s10_11 BOOL)) (= g_s186_187 (|-->| g_s10_11 g_s6_7)) (= g_s187_188 (|-->| g_s10_11 g_s9_10)) (= g_s188_189 (|-->| g_s10_11 g_s10_11)) (= g_s189_190 (|-->| (dom g_s170_171) g_s6_7)) (mem g_s190_191 g_s184_185) (mem g_s191_192 g_s185_186) (mem g_s192_193 g_s186_187) (mem g_s193_194 g_s187_188) (mem g_s194_195 g_s188_189) (mem g_s195_196 g_s189_190) (= g_s196_197 (|-->| g_s11_12 g_s6_7)) (= g_s197_198 (|-->| g_s11_12 BOOL)) (= g_s198_199 (|-->| g_s11_12 INT)) (= g_s199_200 (|-->| g_s11_12 g_s9_10)) (mem g_s200_201 g_s196_197) (mem g_s201_202 g_s197_198) (mem g_s202_203 g_s198_199) (mem g_s203_204 g_s198_199) (= g_s202_203 (set_prod g_s11_12 (SET e0))) (= g_s203_204 (set_prod g_s11_12 (SET e167))) (mem g_s204_205 g_s199_200) (= (ran g_s204_205) (SET g_s152_152)) (= g_s205_206 (|-->| g_s12_13 g_s6_7)) (= g_s206_207 (|-->| g_s12_13 g_s7_8)) (= g_s207_208 (|-->| g_s12_13 g_s9_10)) (= g_s208_209 (|-->| g_s12_13 INT)) (mem g_s209_210 g_s205_206) (= g_s209_210 (set_prod g_s12_13 (SET g_s131_132))) (mem g_s210_211 g_s206_207) (= g_s210_211 (set_prod g_s12_13 (SET g_s137_138))) (mem g_s211_212 g_s207_208) (mem g_s212_213 g_s208_209) (= g_s212_213 (set_prod g_s12_13 (SET e0))) (mem g_s213_214 g_s208_209) (= g_s213_214 (set_prod g_s12_13 (SET e215))) (= g_s214_216 (|-->| g_s13_14 g_s6_7)) (= g_s215_217 (|-->| g_s13_14 BOOL)) (= g_s216_218 (|-->| g_s13_14 g_s7_8)) (= g_s217_219 (|-->| g_s13_14 g_s11_12)) (= g_s218_220 (|-->| g_s13_14 g_s4_5)) (= g_s219_221 (|-->| g_s11_12 g_s7_8)) (= g_s220_222 (|-->| (dom g_s166_166) g_s6_7)) (mem g_s221_223 g_s214_216) (mem g_s222_224 g_s215_217) (mem g_s223_225 g_s216_218) (mem g_s224_226 g_s219_221) (= g_s224_226 (set_prod g_s11_12 (SET g_s137_138))) (= g_s225_227 (|-->| g_s9_10 g_s7_8)) (mem g_s226_228 g_s225_227) (= g_s226_228 (set_prod g_s9_10 (SET g_s137_138))) (mem g_s227_229 g_s220_222) (= g_s228_230 (|-->| (dom g_s168_169) g_s6_7)) (mem g_s229_231 g_s228_230) (= g_s230_232 (|-->| g_s10_11 g_s7_8)) (mem g_s231_233 g_s230_232) (= g_s223_225 (set_prod g_s13_14 (SET g_s137_138))) (mem g_s232_234 g_s217_219) (mem g_s233_235 g_s218_220) (= g_s233_235 (set_prod g_s13_14 (SET g_s145_145))) (= g_s234_236 (|-->| g_s14_15 g_s6_7)) (= g_s235_237 (|-->| g_s14_15 INT)) (= g_s236_238 (|-->| g_s14_15 BOOL)) (= g_s237_239 (|-->| g_s14_15 g_s12_13)) (= g_s238_240 (|-->| g_s14_15 g_s13_14)) (mem g_s239_241 g_s234_236) (mem g_s240_242 g_s235_237) (mem g_s241_243 g_s236_238) (= g_s241_243 (set_prod g_s14_15 (SET FALSE))) (mem g_s242_244 g_s237_239) (mem g_s243_245 g_s238_240) (= g_s244_246 (|-->| (dom g_s166_166) g_s13_14)) (mem g_s245_247 g_s244_246) (= g_s246_248 (|-->| (interval e167 g_s149_149) g_s14_15)) (mem g_s247_249 g_s246_248) (= g_s248_250 (|-->| (interval e167 g_s149_149) NAT)) (mem g_s249_251 g_s248_250) (= g_s250_252 (|-->| (dom g_s168_169) g_s12_13)) (mem g_s251_253 g_s250_252) (= g_s252_254 (|-->| (dom g_s170_171) g_s10_11)) (mem g_s253_255 g_s252_254) (subset g_s254_256 g_s35_36) (subset g_s255_257 g_s36_37) (subset g_s256_258 g_s42_43) (subset g_s257_259 g_s37_38) (mem g_s258_260 g_s37_38) (mem g_s258_260 g_s257_259) (mem g_s259_261 g_s37_38) (not (mem g_s259_261 g_s257_259)) (subset g_s260_262 g_s38_39) (mem g_s261_263 g_s38_39) (mem g_s261_263 g_s260_262) (mem g_s262_264 g_s38_39) (not (mem g_s262_264 g_s260_262)) (subset g_s263_265 g_s39_40) (mem g_s264_266 g_s39_40) (mem g_s264_266 g_s263_265) (mem g_s265_267 g_s39_40) (not (mem g_s265_267 g_s263_265)) (subset g_s266_268 g_s40_41) (mem g_s267_269 g_s40_41) (mem g_s267_269 g_s266_268) (mem g_s268_270 g_s40_41) (not (mem g_s268_270 g_s266_268)) (subset g_s269_271 g_s41_42) (mem g_s270_272 g_s35_36) (not (mem g_s270_272 g_s254_256)) (mem g_s271_273 g_s36_37) (not (mem g_s271_273 g_s255_257)) (subset g_s272_274 g_s43_44) (mem g_s273_275 g_s43_44) (not (mem g_s273_275 g_s272_274)) (mem g_s274_276 g_s43_44) (mem g_s274_276 g_s272_274) (= g_s275_278 (SET (mapplet e277 e0))) (= g_s276_280 (interval e167 e279)) (mem g_s277_281 (perm g_s254_256)) (|>=i| (size g_s277_281) e167) (|<i| (size g_s277_281) MaxInt) (mem g_s278_282 (perm g_s255_257)) (|>=i| (size g_s278_282) e167) (|<i| (size g_s278_282) MaxInt) (mem g_s279_283 (|>->>| g_s255_257 g_s254_256)) (= g_s279_283 (composition (inverse g_s278_282) g_s277_281)) (mem g_s280_284 (perm g_s257_259)) (|<i| (size g_s280_284) MaxInt) (mem g_s281_285 (perm g_s260_262)) (|<i| (size g_s281_285) MaxInt) (mem g_s282_286 (|>->>| g_s257_259 g_s260_262)) (= g_s282_286 (composition (inverse g_s280_284) g_s281_285)) (mem g_s283_287 (perm g_s263_265)) (|<i| (size g_s283_287) MaxInt) (mem g_s284_288 (perm g_s266_268)) (|<i| (size g_s284_288) MaxInt) (mem g_s285_289 (|>->>| g_s266_268 g_s263_265)) (= g_s285_289 (composition (inverse g_s284_288) g_s283_287)) (mem g_s286_290 (perm g_s256_258)) (|<i| (size g_s286_290) MaxInt) (mem g_s287_291 (perm g_s269_271)) (|<i| (size g_s287_291) MaxInt) (mem g_s288_292 (perm g_s272_274)) (= g_s289_293 (|-->| g_s37_38 g_s39_40)) (mem g_s290_294 g_s289_293) (= g_s290_294 (set_prod g_s37_38 (SET g_s265_267))) (= g_s291_295 (|-->| g_s40_41 g_s43_44)) (mem g_s292_296 g_s291_295) (= g_s292_296 (set_prod g_s40_41 (SET g_s273_275))) (= g_s293_297 (|-->| g_s43_44 g_s43_44)) (mem g_s294_298 g_s293_297) (= g_s294_298 (set_prod g_s43_44 (SET g_s273_275))) (= g_s295_299 (|-->| g_s43_44 g_s38_39)) (mem g_s296_300 g_s295_299) (= g_s296_300 (set_prod g_s43_44 (SET g_s262_264))) (= g_s297_301 (|-->| g_s35_36 g_s13_14)) (mem g_s298_302 g_s297_301) (= g_s299_303 (|-->| g_s35_36 g_s35_36)) (mem g_s300_304 g_s299_303) (= g_s300_304 (set_prod g_s35_36 (SET g_s270_272))) (= g_s301_305 (|-->| g_s36_37 g_s36_37)) (mem g_s302_306 g_s301_305) (= g_s302_306 (set_prod g_s36_37 (SET g_s271_273))) (= g_s303_307 (|-->| g_s36_37 g_s35_36)) (mem g_s304_308 g_s303_307) (= g_s304_308 (set_prod g_s36_37 (SET g_s270_272))) (= g_s305_309 (|-->| g_s36_37 g_s38_39)) (mem g_s306_310 g_s305_309) (= g_s306_310 (set_prod g_s36_37 (SET g_s262_264))) (= g_s307_311 (|-->| g_s41_42 g_s35_36)) (mem g_s308_312 g_s307_311) (= g_s308_312 (set_prod g_s41_42 (SET g_s270_272))) (= g_s309_313 (|-->| g_s41_42 g_s39_40)) (mem g_s310_314 g_s309_313) (= g_s310_314 (set_prod g_s41_42 (SET g_s265_267))) (= g_s311_315 (|-->| g_s41_42 g_s14_15)) (mem g_s312_316 g_s311_315) (= g_s313_317 (|-->| g_s39_40 g_s39_40)) (mem g_s314_318 g_s313_317) (= g_s314_318 (set_prod g_s39_40 (SET g_s265_267))) (= g_s315_319 (|-->| g_s40_41 g_s39_40)) (mem g_s316_320 g_s315_319) (= g_s316_320 (set_prod g_s40_41 (SET g_s265_267))) (= g_s317_321 (|-->| g_s40_41 g_s40_41)) (mem g_s318_322 g_s317_321) (= g_s318_322 (set_prod g_s40_41 (SET g_s268_270))) (= g_s319_323 (|-->| g_s38_39 g_s37_38)) (mem g_s320_324 g_s319_323) (= g_s320_324 (set_prod g_s38_39 (SET g_s259_261))) (= g_s321_325 (|-->| g_s40_41 INT)) (mem g_s322_326 g_s321_325) (= g_s322_326 (set_prod g_s40_41 (SET e0))) (= g_s323_327 (|-->| (dom g_s277_281) g_s35_36)) (mem g_s324_328 g_s323_327) (= g_s325_329 (|-->| (dom g_s278_282) g_s36_37)) (mem g_s326_330 g_s325_329) (= g_s327_331 (|-->| (dom g_s277_281) g_s12_13)) (mem g_s328_332 g_s327_331) (= g_s329_333 (|-->| (dom g_s280_284) g_s37_38)) (mem g_s330_334 g_s329_333) (= g_s331_335 (|-->| (dom g_s281_285) g_s38_39)) (mem g_s332_336 g_s331_335) (= g_s333_337 (|-->| (dom g_s283_287) g_s39_40)) (mem g_s334_338 g_s333_337) (= g_s335_339 (|-->| (dom g_s284_288) g_s40_41)) (mem g_s336_340 g_s335_339) (= g_s337_341 (|-->| (dom g_s288_292) g_s43_44)) (mem g_s338_342 g_s337_341) (= g_s339_343 (|-->| g_s39_40 BOOL)) (= g_s340_344 (|-->| g_s39_40 NAT)) (mem g_s341_345 g_s339_343) (= g_s341_345 (set_prod g_s39_40 (SET FALSE))) (mem g_s342_346 g_s340_344) (= g_s343_347 (|-->| g_s40_41 BOOL)) (mem g_s344_348 g_s343_347) (= g_s344_348 (set_prod g_s40_41 (SET FALSE))) (= g_s345_349 (|-->| g_s39_40 g_s37_38)) (mem g_s346_350 g_s345_349) (= g_s347_351 (|-->| g_s40_41 g_s38_39)) (mem g_s348_352 g_s347_351) (= g_s348_352 (set_prod g_s40_41 (SET g_s262_264))) (= g_s349_353 (|-->| g_s39_40 g_s14_15)) (mem g_s350_354 g_s349_353) (= g_s351_355 (|-->| g_s39_40 g_s15_16)) (mem g_s352_356 g_s351_355) (= g_s353_357 (|-->| g_s40_41 g_s18_19)) (mem g_s354_358 g_s353_357) (= g_s354_358 (set_prod g_s40_41 (SET g_s19_20))) (= g_s355_359 (|-->| g_s36_37 g_s3_4)) (mem g_s356_360 g_s355_359) (= g_s356_360 (set_prod g_s36_37 (SET g_s143_143))) (= g_s357_361 (|-->| g_s3_4 NAT)) (= g_s358_362 (|-->| g_s37_38 g_s12_13)) (mem g_s359_363 g_s358_362) (= g_s360_364 (|-->| g_s37_38 g_s35_36)) (mem g_s361_365 g_s360_364) (= g_s362_366 (|-->| g_s38_39 g_s36_37)) (mem g_s363_367 g_s362_366) (= g_s363_367 (set_prod g_s38_39 (SET g_s271_273))) (= g_s364_368 (|-->| g_s38_39 g_s40_41)) (mem g_s365_369 g_s364_368) (= g_s365_369 (set_prod g_s38_39 (SET g_s268_270))) (= g_s366_370 (|-->| g_s38_39 g_s38_39)) (mem g_s367_371 g_s366_370) (= g_s367_371 (set_prod g_s38_39 (SET g_s262_264))) (mem g_s368_372 NAT1) (|<i| g_s368_372 MaxInt) (mem g_s369_373 NAT1) (|<i| g_s369_373 MaxInt) (mem g_s370_374 NAT1) (|<i| g_s370_374 MaxInt) (mem g_s371_375 NAT) (|<i| g_s371_375 MaxInt) (mem g_s372_376 NAT) (|<i| g_s372_376 MaxInt) (mem g_s373_377 NAT) (|<i| g_s373_377 MaxInt) (mem g_s374_378 NAT) (|<i| g_s374_378 MaxInt) (= g_s375_379 (|-->| g_s37_38 (|-->| (interval e167 g_s368_372) g_s39_40))) (mem g_s376_380 g_s375_379) (= g_s377_381 (|-->| (interval e167 g_s369_373) g_s40_41)) (mem g_s378_382 g_s377_381) (= g_s379_383 (|-->| (interval e167 g_s371_375) g_s40_41)) (mem g_s380_384 g_s379_383) (= g_s381_385 (|-->| (interval e167 g_s374_378) g_s36_37)) (mem g_s382_386 g_s381_385) (= g_s383_387 (|-->| (interval e167 g_s372_376) g_s38_39)) (mem g_s384_388 g_s383_387) (= g_s385_389 (|-->| (interval e167 g_s373_377) g_s40_41)) (mem g_s386_390 g_s385_389) (= g_s387_391 (|-->| (interval e167 g_s373_377) g_s38_39)) (mem g_s388_392 g_s387_391) (= g_s389_393 (|-->| g_s37_38 NAT)) (mem g_s390_394 g_s389_393) (= g_s390_394 (set_prod g_s37_38 (SET e0))) (= g_s391_395 (|-->| g_s38_39 INT)) (= g_s392_396 (|-->| g_s38_39 BOOL)) (mem g_s393_397 g_s391_395) (= g_s393_397 (set_prod g_s38_39 (SET e215))) (mem g_s394_398 g_s392_396) (= g_s394_398 (set_prod g_s38_39 (SET FALSE))) (mem g_s395_399 NAT1) (|<=i| g_s395_399 (size g_s280_284)) (mem g_s396_400 NAT1) (|<=i| g_s396_400 (size g_s281_285)) (= g_s397_401 (|-->| g_s35_36 (|-->| (interval e167 g_s395_399) g_s37_38))) (mem g_s398_402 g_s397_401) (= g_s399_403 (|-->| g_s35_36 INT)) (mem g_s400_404 g_s399_403) (= g_s400_404 (set_prod g_s35_36 (SET e0))) (= g_s401_405 (|-->| g_s36_37 INT)) (mem g_s402_406 g_s401_405) (= g_s402_406 (set_prod g_s36_37 (SET e0))) (= g_s403_407 (id g_s275_278))))
(define-fun |def_seext| () Bool (and (mem g_s404_408 BOOL) (mem g_s405_409 BOOL) (mem g_s406_410 (|+->| g_s150_150 g_s0_1)) (mem g_s407_411 (|-->| (dom g_s406_410) g_s6_7)) (mem g_s408_412 (|<->| (dom g_s406_410) (dom g_s406_410))) (mem g_s409_413 (|<->| (dom g_s406_410) g_s153_153)) (mem g_s410_414 (|-->| (ran g_s409_413) (dom g_s406_410))) (mem g_s411_415 (|-->| (ran g_s409_413) g_s6_7)) (mem g_s412_416 (|+->| g_s155_155 (dom g_s406_410))) (subset g_s413_417 g_s155_155) (subset g_s414_418 g_s155_155) (mem g_s415_419 (|<->| (binary_union (binary_union (dom g_s412_416) g_s413_417) g_s414_418) g_s158_158)) (mem g_s416_420 (iseq g_s158_158)) (mem g_s417_421 (|-->| (ran g_s415_419) g_s6_7)) (mem g_s418_422 (|-->| (ran g_s415_419) g_s150_150)) (mem g_s419_423 (|+->| (binary_union g_s413_417 g_s414_418) g_s6_7)) (mem g_s420_424 g_s160_160) (mem g_s421_425 (|<->| g_s155_155 g_s160_160)) (mem g_s422_426 (iseq g_s160_160)) (mem g_s423_427 (|+->| (binary_union (ran g_s421_425) (SET g_s420_424)) g_s155_155)) (subset (ran g_s421_425) (dom g_s423_427)) (mem g_s424_428 (|-->| (ran g_s421_425) g_s6_7)) (mem g_s425_429 (|-->| (ran g_s421_425) BOOL)) (mem g_s426_430 (|+->| (ran g_s421_425) g_s6_7)) (mem g_s427_431 (|<->| g_s414_418 (set_prod g_s163_163 g_s163_163))) (mem g_s428_432 (iseq (set_prod g_s163_163 g_s163_163))) (mem g_s429_433 (|-->| (binary_union (dom (ran g_s427_431)) (ran (ran g_s427_431))) NAT1)) (mem g_s430_434 (|+->| (binary_union (dom (ran g_s427_431)) (ran (ran g_s427_431))) (ran g_s415_419))) (mem g_s431_435 (|+->| (binary_union (dom (ran g_s427_431)) (ran (ran g_s427_431))) (set_prod (ran g_s421_425) (ran g_s415_419)))) (= (binary_union (dom g_s430_434) (dom g_s431_435)) (binary_union (dom (ran g_s427_431)) (ran (ran g_s427_431)))) (subset g_s432_436 (binary_union (dom (ran g_s427_431)) (ran (ran g_s427_431)))) (subset g_s433_437 (dom g_s431_435)) (mem g_s434_438 (|+->| g_s150_150 g_s6_7)) (mem g_s435_439 (|+->| g_s155_155 g_s6_7)) (mem g_s436_440 (|+->| g_s160_160 g_s136_137)) (mem g_s437_441 (|>+>| g_s153_153 g_s136_137)) (mem g_s438_442 (|+->| g_s163_163 g_s136_137)) (mem g_s439_443 (|+->| g_s163_163 g_s136_137)) (mem g_s440_444 BOOL) (mem g_s441_445 g_s155_155) (mem g_s442_446 (|+->| g_s150_150 g_s158_158)) (mem g_s443_447 (|+->| (set_prod g_s155_155 g_s153_153) g_s158_158)) (mem g_s444_448 (|+->| g_s158_158 g_s7_8)) (=> (= g_s404_408 TRUE) (and (subset g_s413_417 (dom g_s419_423)) (subset g_s414_418 (dom g_s419_423)))) (subset g_s445_449 g_s136_137) (subset g_s446_450 g_s136_137) (mem g_s447_451 (perm g_s446_450)) (|<i| (size g_s447_451) MaxInt) (subset g_s448_452 g_s136_137) (mem g_s449_453 (|+->| g_s446_450 (set_diff g_s6_7 (SET g_s131_132)))) (mem g_s450_454 (|-->| g_s446_450 (iseq g_s136_137))) (= g_s448_452 e455) (forall ((l_s452 U)(l_s453 U)) (=> (and (mem l_s452 g_s446_450) (mem l_s453 g_s446_450) (not (= l_s452 l_s453))) (= (binary_inter (ran (apply g_s450_454 l_s452)) (ran (apply g_s450_454 l_s453))) empty))) (mem g_s454_456 (|+->| g_s448_452 (set_diff g_s6_7 (SET g_s131_132)))) (mem g_s455_457 (|-->| g_s448_452 g_s6_7)) (mem g_s456_458 (|-->| g_s448_452 g_s0_1)) (mem g_s457_459 (|-->| g_s448_452 NAT)) (mem g_s458_460 (|+->| g_s448_452 INT)) (mem g_s459_461 (|-->| g_s448_452 NAT)) (mem g_s460_462 (|+->| g_s448_452 INT)) (|<=i| (|*i| e463 (card g_s446_450)) (card g_s150_150)) (|<=i| (|*i| e463 (card g_s448_452)) (card g_s153_153)) (subset g_s461_464 g_s136_137) (mem g_s462_465 (perm g_s461_464)) (|<i| (size g_s462_465) MaxInt) (subset g_s463_466 g_s136_137) (subset g_s464_467 g_s136_137) (subset g_s465_468 g_s136_137) (mem g_s466_469 (|-->| g_s461_464 g_s6_7)) (mem g_s467_470 (|-->| g_s461_464 (iseq g_s136_137))) (forall ((l_s452 U)(l_s453 U)) (=> (and (mem l_s452 g_s461_464) (mem l_s453 g_s461_464) (not (= l_s452 l_s453))) (= (binary_inter (ran (apply g_s467_470 l_s452)) (ran (apply g_s467_470 l_s453))) empty))) (= g_s463_466 e471) (mem g_s468_472 (|-->| g_s461_464 (iseq g_s136_137))) (forall ((l_s452 U)(l_s453 U)) (=> (and (mem l_s452 g_s461_464) (mem l_s453 g_s461_464) (not (= l_s452 l_s453))) (= (binary_inter (ran (apply g_s468_472 l_s452)) (ran (apply g_s468_472 l_s453))) empty))) (= g_s464_467 e473) (mem g_s469_474 (|-->| g_s461_464 (iseq g_s136_137))) (forall ((l_s452 U)(l_s453 U)) (=> (and (mem l_s452 g_s461_464) (mem l_s453 g_s461_464) (not (= l_s452 l_s453))) (= (binary_inter (ran (apply g_s469_474 l_s452)) (ran (apply g_s469_474 l_s453))) empty))) (= g_s465_468 e475) (mem g_s470_476 (|+->| g_s463_466 (set_diff g_s6_7 (SET g_s131_132)))) (mem g_s471_477 (|-->| g_s463_466 g_s6_7)) (mem g_s472_478 (|-->| g_s463_466 g_s0_1)) (mem g_s473_479 (|-->| g_s463_466 INT)) (mem g_s474_480 (|+->| g_s463_466 INT)) (mem g_s475_481 (|+->| g_s464_467 (set_diff g_s6_7 (SET g_s131_132)))) (mem g_s476_482 (|+->| g_s464_467 g_s0_1)) (mem g_s477_483 (|-->| g_s464_467 g_s6_7)) (mem g_s478_484 (|+->| g_s464_467 g_s6_7)) (mem g_s479_485 (|+->| g_s464_467 NAT)) (mem g_s480_486 (|-->| g_s465_468 INT)) (mem g_s481_487 (|-->| g_s465_468 g_s6_7)) (mem g_s482_488 (|-->| g_s465_468 INT)) (mem g_s483_489 (|-->| g_s465_468 g_s6_7)) (mem g_s484_490 (|+->| g_s465_468 g_s6_7)) (mem g_s485_491 (|+->| g_s465_468 g_s6_7)) (mem g_s486_492 (|+->| g_s465_468 (SET (mapplet e463 e167)))) (mem g_s487_493 BOOL) (= (size g_s165_165) (card g_s150_150)) (= (size g_s170_171) (card g_s153_153)) (= g_s15_16 (SET (mapplet g_s17_18 g_s16_17))) (mem g_s450_454 (|-->| g_s446_450 (iseq g_s448_452))) (mem g_s467_470 (|-->| g_s461_464 (iseq g_s463_466))) (mem g_s468_472 (|-->| g_s461_464 (iseq g_s464_467))) (mem g_s469_474 (|-->| g_s461_464 (iseq g_s465_468)))))
(define-fun |def_mchcst| () Bool true)
(define-fun |def_aprp| () Bool true)
(define-fun |def_abs| () Bool true)
(define-fun |def_inv| () Bool true)
(define-fun |def_ass| () Bool true)
(define-fun |def_sets| () Bool true)
(define-fun |def_imlprp| () Bool true)
(define-fun |def_imprp| () Bool true)
(define-fun |def_imext| () Bool true)
; PO group 0 
(assert |def_B definitions|)
(assert |def_ctx|)
(assert |def_mchcst|)
(assert |def_aprp|)
(assert |def_imlprp|)
(assert |def_imprp|)
(assert |def_imext|)
(assert |def_seext|)
(assert |def_abs|)
(assert |def_inv|)
(assert |def_ass|)
(assert (= g_s489$1_495 g_s489_494))
(define-fun lh_1 () Bool (mem g_s489_494 INT))
(define-fun lh_2 () Bool (= g_s404_408 TRUE))
; PO 1 in group 0
(assert (not (=> (and lh_1 lh_2) (mem g_s489$1_495 INT))))
(check-sat)
(exit)